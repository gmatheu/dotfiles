export DISABLE_CORRECTION="true"
export EDITOR='vim'

SPACESHIP_PROMPT_ORDER=(
  time          # Time stampts section
  user          # Username section
  host          # Hostname section
  dir           # Current directory section
  git           # Git section (git_branch + git_status)
  # hg            # Mercurial section (hg_branch  + hg_status)
  package       # Package version
  line_sep      # Line break
  vi_mode       # Vi-mode indicator
  jobs          # Backgound jobs indicator
  exit_code     # Exit code section
  char          # Prompt character
)
SPACESHIP_RPROMPT_ORDER=(
  node          # Node.js section
  ruby          # Ruby section
  # elixir        # Elixir section
  # xcode         # Xcode section
  # swift         # Swift section
  golang        # Go section
  # php           # PHP section
  # rust          # Rust section
  # haskell       # Haskell Stack section
  # julia         # Julia section
  docker        # Docker section
  venv          # virtualenv section
  pyenv         # Pyenv section
  # dotnet        # .NET section
  # ember         # Ember.js section
  exec_time     # Execution time
)
SPACESHIP_PROMPT_ADD_NEWLINE=false
SPACESHIP_PROMPT_SEPARATE_LINE=true
SPACESHIP_PROMPT_SUFFIXES_SHOW=false
SPACESHIP_PROMPT_DEFAULT_PREFIX='\0'
SPACESHIP_PROMPT_DEFAULT_SUFFIX=' '
SPACESHIP_PROMPT_CHAR='➜ '

SPACESHIP_GIT_PREFIX='‹'
SPACESHIP_GIT_SUFFIX='›'
SPACESHIP_GIT_SYMBOL='\0'
SPACESHIP_GIT_STATUS_PREFIX="["
SPACESHIP_GIT_STATUS_SUFFIX="] "
SPACESHIP_DIR_TRUNC=2
SPACESHIP_NODE_SYMBOL="\0"
SPACESHIP_DOCKER_SHOW=false
SPACESHIP_DOCKER_PREFIX='\0'
SPACESHIP_DOCKER_SYMBOL=''
SPACESHIP_VENV_SHOW=false
SPACESHIP_PYENV_PREFIX='›'
SPACESHIP_PYENV_SYMBOL=' '
SPACESHIP_RUBY_PREFIX='›'
SPACESHIP_RUBY_SYMBOL='\0'
SPACESHIP_EXEC_TIME_PREFIX=' '
SPACESHIP_GOLANG_SYMBOL='\0'
SPACESHIP_PACKAGE_SYMBOL='\0'
SPACESHIP_PACKAGE_PREFIX='\0'

ANTIGEN_HOME="$HOME/.antigen-repo"
export _ANTIGEN_INSTALL_DIR=$ANTIGEN_HOME

function load_antigen() {
  ANTIGEN_REPO="https://github.com/zsh-users/antigen.git"
  ANTIGEN_FILE="$ANTIGEN_HOME/antigen.zsh"
  if [ ! -f $ANTIGEN_FILE ]; then
    echo "antigen not found"
    git clone $ANTIGEN_REPO $ANTIGEN_HOME
  fi
  source $ANTIGEN_FILE
}
function update_antigen() {
  local antigen_version=v2.0.2
  antigen selfupdate
  echo "Using Antigen ${antigen_version}"
  git --git-dir=$ANTIGEN_HOME/.git checkout ${antigen_version}
  antigen reset
}

ZPLUG_HOME="$HOME/.zplug"
export _ZPLUG_INSTALL_DIR=$ZPLUG_HOME
function load_zplug() {
  ZPLUG_REPO="https://github.com/zplug/zplug"
  ZPLUG_FILE="$ZPLUG_HOME/init.zsh"
  if [ ! -f $ZPLUG_FILE ]; then
    echo "zplug not found"
    git clone $ZPLUG_REPO $ZPLUG_HOME
    git --git-dir=$ZPLUG_HOME/.git checkout 2.3.2
  fi
  source $ZPLUG_FILE
}

bind_keys() {
  # Vi-mode
  # antigen bundle vi-mode # Only for prompt
  # antigen bundle sharat87/zsh-vim-mode
  bindkey "^R" history-incremental-search-backward
  bindkey "^F" forward-char # Make them work in vicmd
  bindkey "^D" delete-char-or-list
}

function apply_bundles() {
  if (type antigen | grep -e 'function' > /dev/null); then
    # antigen bundle sharat87/autoenv
    # antigen bundle tarruda/zsh-autosuggestions
    antigen bundle zsh-users/zsh-syntax-highlighting

    # antigen bundle gmatheu/shell-plugins explain-shell
    antigen bundle gmatheu/shell-plugins dirrc
    # antigen bundle gmatheu/shell-plugins docker
    # antigen bundle gmatheu/shell-plugins notify
    antigen bundle gmatheu/shell-plugins git
    # antigen bundle gmatheu/shell-plugins git-svn
    antigen bundle gmatheu/shell-plugins vim
    # antigen bundle gmatheu/shell-plugins svn
    antigen bundle gmatheu/shell-plugins virtualbox
    antigen bundle gmatheu/shell-plugins xclip
    antigen bundle gmatheu/shell-plugins grep
    antigen bundle gmatheu/shell-plugins fast-server
    antigen bundle gmatheu/shell-plugins start-me-up
    # antigen bundle gmatheu/shell-plugins java
    antigen bundle gmatheu/shell-plugins tmux
    antigen bundle gmatheu/shell-plugins profile-secrets
    antigen bundle gmatheu/dotfiles shell-plugin
    antigen bundle ytet5uy4/fzf-widgets

    antigen use oh-my-zsh
    antigen bundle docker
    # antigen bundle gradle
    # antigen bundle lein
    antigen bundle bundler
    antigen bundle git
    antigen bundle git-extras
    # antigen bundle rake
    antigen bundle autojump
    antigen bundle rvm
    antigen bundle vagrant
    antigen bundle pyenv
    antigen bundle pip
    # antigen bundle rails
    antigen bundle history
    antigen bundle debian
    antigen bundle history-substring-search
    antigen bundle command-not-found
    antigen bundle z
    # antigen bundle svn-fast-info
    # antigen bundle docker/machine contrib/completion/zsh
    # antigen bundle docker/docker contrib/completion/zsh
    # antigen bundle docker/compose contrib/completion/zsh
    # antigen theme robbyrussell
    # antigen theme denysdovhan/spaceship-zsh-theme spaceship
    # Has RPROMPT support
    antigen theme ddrexl/spaceship-zsh-theme spaceship

    antigen apply
  fi
}
load_zplug_packages() {
  if (type zplug | grep -e 'function' > /dev/null); then
    # # zplug "sharat87/autoenv", from:github, as:plugin
    # # antigen bundle tarruda/zsh-autosuggestions
    zplug "zsh-users/zsh-syntax-highlighting"
    zplug "zsh-users/zsh-history-substring-search"

    # # antigen bundle gmatheu/shell-plugins explain-shell
    # antigen bundle gmatheu/shell-plugins dirrc
    # # antigen bundle gmatheu/shell-plugins docker
    # # antigen bundle gmatheu/shell-plugins notify
    zplug "gmatheu/shell-plugins", from:github, as:plugin, use:git/init.zsh
    # # antigen bundle gmatheu/shell-plugins git-svn
    # antigen bundle gmatheu/shell-plugins vim
    # # antigen bundle gmatheu/shell-plugins svn
    # antigen bundle gmatheu/shell-plugins virtualbox
    # antigen bundle gmatheu/shell-plugins xclip
    # antigen bundle gmatheu/shell-plugins grep
    # antigen bundle gmatheu/shell-plugins fast-server
    # antigen bundle gmatheu/shell-plugins start-me-up
    # # antigen bundle gmatheu/shell-plugins java
    # antigen bundle gmatheu/shell-plugins tmux
    # antigen bundle gmatheu/shell-plugins profile-secrets
    # antigen bundle gmatheu/dotfiles shell-plugin
    # antigen bundle ytet5uy4/fzf-widgets

    zplug "plugins/docker", from:oh-my-zsh
    # zplug "plugins/gradle", from:oh-my-zsh
    # zplug "plugins/lein", from:oh-my-zsh
    zplug "plugins/bundler", from:oh-my-zsh
    zplug "plugins/git", from:oh-my-zsh
    zplug "plugins/git-extras", from:oh-my-zsh
    # zplug "plugins/rake", from:oh-my-zsh
    zplug "plugins/autojump", from:oh-my-zsh
    zplug "plugins/rvm", from:oh-my-zsh
    zplug "plugins/vagrant", from:oh-my-zsh
    zplug "plugins/pyenv", from:oh-my-zsh
    zplug "plugins/pip", from:oh-my-zsh
    # zplug "plugins/rails", from:oh-my-zsh
    zplug "plugins/history", from:oh-my-zsh
    zplug "plugins/debian", from:oh-my-zsh
    zplug "plugins/history-substring-search", from:oh-my-zsh
    zplug "plugins/command-not-found", from:oh-my-zsh
    zplug "plugins/z", from:oh-my-zsh
    # zplug "plugins/svn-fast-info", from:oh-my-zsh

    # # antigen bundle docker/machine contrib/completion/zsh
    # # antigen bundle docker/docker contrib/completion/zsh
    # # antigen bundle docker/compose contrib/completion/zsh
    # # antigen theme denysdovhan/spaceship-zsh-theme spaceship
    # # Has RPROMPT support
    # antigen theme ddrexl/spaceship-zsh-theme spaceship
    zplug denysdovhan/spaceship-zsh-theme, use:spaceship.zsh, from:github, as:plugin, at:v3.4.1

    if ! zplug check --verbose; then
        printf "Install? [y/N]: "
        if read -q; then
            echo; zplug install
        fi
    fi
    zplug load
  fi
}

function extra_init(){
  d=~/.dircolors
  test -r $d && eval "$(dircolors $d)"
  export GREP_COLOR='1;31'
}

function aliases() {
  alias zsh_reload='source ~/.zshrc'
  alias zshr='zsh_reload'
  alias o="xdg-open"
  alias xml='xmllint --format -'
}

bind_keys
# load_antigen
# apply_bundles
load_zplug
load_zplug_packages
extra_init
aliases

# Customize to your needs...
export PATH=$PATH:/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games

if [ -f ~/.profile ]; then
  source ~/.profile
fi

function measure_startup_time() {
  for i in $(seq 1 10); do time zsh -i -c exit ; done
}

# Lazy load nvm and rvm
export NVM_DIR="$HOME/.nvm"
if [ -s "$NVM_DIR/nvm.sh" ]; then
# then
#   function nvm(){
#     echo "Lazy loading nvm..."
#     nvm
#     source "$NVM_DIR/nvm.sh"
#   }
  #Spaceship theme requires node, that's why we need to load NVM eagerly
  source "$NVM_DIR/nvm.sh"
fi

if [[ -s "$HOME/.rvm/scripts/rvm" ]]
then
  export PATH="$HOME/.rvm/bin:$PATH"
  function rvm() {
    echo "Lazy loading rvm..."
    unset -f rvm
    source "$HOME/.rvm/scripts/rvm"
    rvm
  }
fi

export SDKMAN_DIR="${HOME}/.sdkman"
if [[ -s "${HOME}/.sdkman/bin/sdkman-init.sh" ]]
then
  function sdk {
    echo "Lazy loading sdk..."
    unset -f sdk
    source "${HOME}/.sdkman/bin/sdkman-init.sh"
    sdk
  }
fi

function base16-shell() {
  BASE16_SHELL=$HOME/.config/base16-shell/
  [ -n "$PS1"  ] && \
    [ -s $BASE16_SHELL/profile_helper.sh ] && \
    eval "$($BASE16_SHELL/profile_helper.sh)"
}
base16-shell

alias dirs='dirs -v'

function fzf() {
  unset -f fzf
  [ ! -d ~/.fzf ] \
    && echo "Cloning fzf repo" \
    && git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf \
    && $HOME/.fzf/install
  [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
  fzf
}
